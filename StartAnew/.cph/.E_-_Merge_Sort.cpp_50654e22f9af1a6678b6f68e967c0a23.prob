{"name":"E - Merge Sort","group":"Virtual Judge - CSE-244 19 CSE Lab 01 Practice on Sorting & Searching Algorithms","url":"https://vjudge.net/contest/529866#problem/E","interactive":false,"memoryLimit":128,"timeLimit":1000,"tests":[{"input":"Merge(A, left, mid, right)\n  n1 = mid - left;\n  n2 = right - mid;\n  create array L[0...n1], R[0...n2]\n  for i = 0 to n1-1\n    do L[i] = A[left + i]\n  for i = 0 to n2-1\n    do R[i] = A[mid + i]\n  L[n1] = SENTINEL\n  R[n2] = SENTINEL\n  i = 0;\n  j = 0;\n  for k = left to right-1\n    if L[i] &lt;= R[j]\n      then A[k] = L[i]\n           i = i + 1\n      else A[k] = R[j]\n           j = j + 1\n\nMerge-Sort(A, left, right){\n  if left+1 &lt; right\n    then mid = (left + right)/2;\n         call Merge-Sort(A, left, mid)\n         call Merge-Sort(A, mid, right)\n         call Merge(A, left, mid, right)\n","output":"10\n8 5 9 2 6 3 7 1 10 4\n","id":1669031873959}],"testType":"single","input":{"type":"stdin"},"output":{"type":"stdout"},"languages":{"java":{"mainClass":"Main","taskClass":"EMergeSort"}},"batch":{"id":"e091fef8-7c7b-423b-bb51-f2fabaff3b44","size":1},"srcPath":"e:\\COMPETITIVE_PROGRAMMING\\StartAnew\\E_-_Merge_Sort.cpp"}